
% produces a figure with sample colorbars using multigradient

gradients = { ...
        {'Black-red-yellow-white', 'multigradient([0 0 0; 1 0 0; 1 1 0; 1 1 1])'}, ...
        {'Black-red-yellow-white, custom control points', 'multigradient([0 0 0; 1 0 0; 1 1 0; 1 1 1], ''pts'', [1 5 6 7])'}, ...
        {'Blue-red, RGB-interpolated', 'multigradient([0 0 1; 1 0 0], ''interp'', ''rgb'')'}, ...
        {'Blue-red, L*a*b*-interpolated (isoluminant)', 'multigradient([0 0 .8; .8 0 0], ''interp'', ''labiso'')'}, ...
        {'Preset: Kenneth Moreland''s divergent blue-red', 'multigradient(''preset'', ''div.km.BuRd'')'}, ...
        {'Preset: Cynthia Brewer''s divergent spectral', 'multigradient(''preset'', ''div.cb.spectral.10'')'}, ...
        {'Preset: Cynthia Brewer''s sequential blue-purple, reversed', 'multigradient(''preset'', ''seq.cb.BuPu.9'', ''reverse'', 1)'}, ...
        {'Preset: Cynthia Brewer''s divergent green-yellow-red, quantized', 'multigradient(''preset'', ''div.cb.GnYlRd.7'', ''length'', 5)'}, ...
        };

f = figure;
for r = 1:numel(gradients)
    subplot(numel(gradients),1,r);
    imagesc(1:1000);
    gradient = gradients{r};
    colormap(gca, eval(gradient{2}));
    title(gradient{1});
    xlabel(gradient{2});
    set(gca,'Yticklabel',[]);
    set(gca,'Xticklabel',[]);
end

pos = get(f, 'Position');
set(f, 'Position', pos .* [1 .25 1.25 2]);